# Path to your oh-my-zsh installation.
export ZSH=~/.oh-my-zsh

# neovim master race
export EDITOR="nvim"
export MYNVIMRC=$HOME/.config/nvim/init.vim

# ssh
export SSH_KEY_PATH="~/.ssh/id_rsa"

# PATH
export PATH=$PATH:/usr/local/bin
export PATH=$PATH:/usr/local/sbin
export PATH=$PATH:/usr/local/MacGPG2/bin
export PATH="$HOME/.pyenv/bin:$PATH"
export PATH="$HOME/.yarn/bin:$PATH"
# Android
export ANDROID_HOME=$HOME/Library/Android/sdk
export PATH=$PATH:$ANDROID_HOME/tools
export PATH=$PATH:$ANDROID_HOME/tools/bin
export PATH=$PATH:$ANDROID_HOME/platform-tools

export GOPATH="$HOME/go/"

# Manpages path
export MANPATH="/usr/local/share/man:$MANPATH"

# Tell homebrew to install cask applications to root applications folder
export HOMEBREW_CASK_OPTS="--appdir=/Applications"

# FZF should search hidden files and ignore case
export FZF_DEFAULT_COMMAND='rg --files --hidden --smart-case --follow --glob "!.git/*"'

# Disable annoying pyenv prompt
export VIRTUAL_ENV_DISABLE_PROMPT=1

# Keybase Developer Tools Chrome Extension
unset KEYBASE_PERF
export KEYBASE_LOCAL_DEBUG=1
export KEYBASE_DEV_TOOL_ROOTS="$HOME/Library/Application Support/Google/Chrome/Profile 3/Extensions/hgldghadipiblonfkkicmgcbbijnpeog,$HOME/Library/Application Support/Google/Chrome/Profile 3/Extensions/fmkadmapgofadopljbjfkapdkoienihi"

# Set name of the theme to load.
# Look in ~/.oh-my-zsh/themes/
# Optionally, if you set this to "random", it'll load a random theme each
# time that oh-my-zsh is loaded.
ZSH_THEME=spaceship

# ==================================================================
DEFAULT_USER=`whoami`

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to change how often to auto-update (in days).
export UPDATE_ZSH_DAYS=4

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.

ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.

COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.

plugins=(
  git
  osx
  common-aliases
  httpie
  jsontools
  mix
  rsync
  zsh-zyntax-highlighting
  zsh-autosuggestions
)


# =============================================================

# User configuration
source $ZSH/oh-my-zsh.sh

# Preferred editor for local and remote sessions
if [[ -n $SSH_CONNECTION ]]; then
  export EDITOR='vim'
fi

# Automatically ls after cd
function cs()
{
  if [ $# -eq 0 ]; then
    cd && ll
  else
    cd "$*" && ll
  fi
}

jobscount() {
  # local stopped=$(jobs -sp | wc -l)
  # local running=$(jobs -rp | wc -l)
  local total=$(jobs -p | wc -l | tr -d ' ')
  echo "${total}"
}

# Customize man pages color
man() {
    env \
        LESS_TERMCAP_mb=$'\e[1;31m' \
        LESS_TERMCAP_md=$'\e[1;31m' \
        LESS_TERMCAP_me=$'\e[0m' \
        LESS_TERMCAP_se=$'\e[0m' \
        LESS_TERMCAP_so=$'\e[1;44;33m' \
        LESS_TERMCAP_ue=$'\e[0m' \
        LESS_TERMCAP_us=$'\e[1;32m' \
            man "$@"
}

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
alias n='nvim'
alias reattach='tmux attach-session -t'
alias rez='tmux attach || { (while ! tmux run-shell ~/.tmux/plugins/tmux-resurrect/scripts/restore.sh; do sleep 0.2; done)& tmux ; }'
alias ssh-add='eval $(ssh-agent -s) > /dev/null && ssh-add'

# alias cd='cs'
alias irb='irb --simple-prompt'

alias kk='clear'
alias gc='git commit -v -S'
alias gd='git difftool'
alias gdc='git difftool --cached'
alias grbsign="git rebase --exec 'git commit --amend --no-edit -n -S' -i"
alias ggpush='git push -u origin $(git_current_branch)'
alias bgrep='/usr/bin/grep --color=auto --exclude-dir={.bzr,CVS,.git,.hg,.svn}'


# ===============================================
# SOURCES
# ===============================================

# Keybase ZSHRC scripts for setup
source ~/.zshrc.keybase

# Iterm iterm shell integration
test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"

# ===============================================
# VERSION MANAGERS
# ===============================================

# Python Environment initialization
eval "$(pyenv init -)"
eval "$(pyenv virtualenv-init -)"

# Node Version Manager
export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

# Ruby Environment initialization
eval "$(rbenv init -)"

# # ===============================================
# THEME
# # ===============================================

# # ORDER
SPACESHIP_PROMPT_ORDER=(
  time
  user
  host
  dir
  git
  hg
  node
  ruby
  elixir
  xcode
  swift
  golang
  rust
  haskell
  docker
  venv
  exec_time
  line_sep
  vi_mode
  jobs
  exit_code
  char
)

# GIT
SPACESHIP_GIT_SHOW=true
SPACESHIP_GIT_PREFIX=""
SPACESHIP_GIT_SUFFIX="$SPACESHIP_PROMPT_DEFAULT_SUFFIX"
SPACESHIP_GIT_SYMBOL=""
# GIT BRANCH
SPACESHIP_GIT_BRANCH_SHOW=true
SPACESHIP_GIT_BRANCH_PREFIX="("
SPACESHIP_GIT_BRANCH_SUFFIX=") "
SPACESHIP_GIT_BRANCH_COLOR="magenta"
# GIT STATUS
SPACESHIP_GIT_STATUS_SHOW=true
SPACESHIP_GIT_STATUS_PREFIX="["
SPACESHIP_GIT_STATUS_SUFFIX="]"
SPACESHIP_GIT_STATUS_COLOR="red"
SPACESHIP_GIT_STATUS_UNTRACKED="?"
SPACESHIP_GIT_STATUS_ADDED="+"
SPACESHIP_GIT_STATUS_MODIFIED="!"
SPACESHIP_GIT_STATUS_RENAMED="»"
SPACESHIP_GIT_STATUS_DELETED="✘"
SPACESHIP_GIT_STATUS_STASHED="$"
SPACESHIP_GIT_STATUS_UNMERGED="="
SPACESHIP_GIT_STATUS_AHEAD="⇡"
SPACESHIP_GIT_STATUS_BEHIND="⇣"
SPACESHIP_GIT_STATUS_DIVERGED="⇕"


