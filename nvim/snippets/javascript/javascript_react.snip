# ===============================================
# Components declarations
# ===============================================
snippet scomp "React stateful component" b
  import React, { Component } from 'react'
  import { } from 'prop-types'

  class $1 extends Component {
    static propTypes = {

    }

    render () {
    return (
      ${3:<div>Hello World</div>}
    )
    }
  }

  export default $1

snippet fcomp "React functional component" b
  import React from 'react'
  import { $3 } from 'prop-types'

  const ${1:Component} = (props) => {
    return (
      ${2:<div>Hello</div>}
    )
  }

  $1.propTypes = {
  }

  export default $1

# ===============================================
# Prop types and default props, context
# ===============================================
snippet imp "import prop-types" b
  import { ${1:func} } from 'prop-types'

snippet propt "prop types definition" w
  propTypes = {
    ${1:prop}: ${2:value}
  }

snippet dpropt "default prop values" w
  defaultProps = {
    ${1:prop}: ${2:value}
  }

snippet contt "context types definition" w
  contextTypes = {
    ${1:prop}: ${2:value}
  }

snippet prop "one prop type definition" w
  ${1:number}${2:.isRequired}

# ===============================================
# Component lifecycle functions
# ===============================================
snippet cwm "Component will mount method" b
  componentWillMount() {
    $1
  }

snippet cdm "Component did mount method" b
  componentDidMount() {
    $1
  }

snippet cwrp "Component will receive props" b
  componentWillReceiveProps(newProps) {
    $1
  }

snippet scu "Should Component update" b
  shouldComponentUpdate(newProps, newState) {
    // import shallowCompare from 'react-addons-shallow-compare'
    return shallowCompare(this, newProps, newState)$1
  }


snippet cwup "Component will update method" b
  componentWillUpdate(newProps, newState) {
    $1
  }

snippet cdu "Component did update method" b
  componentDidUpdate(prevProps, prevState) {
    $1
  }

snippet cwu "Component will unmount method" b
  componentWillUnmount() {
    $1
  }

# ===============================================
# Misc
# ===============================================
snippet pp "props" w
  props.${1:property}

snippet tp "this.props." w
  this.props.${1:property}

snippet ts "this.state." w
  this.state.${1:property}

snippet tss "this.setState" w
  this.setState({
    ${1:property}: ${2:value}$0
  })

snippet epd "prevent default on event" w
  e.preventDefault()

snippet esp "stop propagation on event" w
  e.stopPropagation()

# ===============================================
# Classnames library snippets
# ===============================================
snippet cx "classnames (cx) definition"
  const ${1:div}Classes = classnames({
    '${2:class}': ${3:condition}
  })
