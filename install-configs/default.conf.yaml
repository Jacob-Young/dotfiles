# =============================================================================
# TODO LIST
# =============================================================================
# TODO: https://github.com/alexcormier/dotbot-rust

# TODO: Go through p10k.zsh and find all prompt dependencies. Currently...
#       - virtualenv
#       - pyenv
#       - goenv therefore go
#       - node version manager (write something that installs node lTS as the default)
#       - rust (install rust)

# TODO: Package OperatorMono into the dotfiles directory

# TODO: Find a way to install fonts to the macOS FontBook.app programatically (https://superuser.com/a/120711)

- defaults:
    link:
      relink: true
    shell:
      quiet: true

# Looks for dead symlinks that point to the dotfiles repository, if any are
# found they will be cleanned automatically
# Set recursive: true to look for nested dead symbolic links
- clean: ['~']

# =============================================================================
# DEFAULT: Create directories
# =============================================================================
- create:
    - ~/.config
    - ~/.config/alacritty
    - ~/.vim/undo-history
    - ~/Pictures/Screenshots # Alternative screenshot location

# =============================================================================
# DEFAULT: Link files
# Note: If linking to a directory, do not add a trailing slash
# =============================================================================
- link:
    ~/xterm-256color-italic.terminfo: shell/xterm-256color-italic.terminfo

- link: # .dotfiles
    ~/.gitignore: git/gitignore
    ~/.gitconfig: git/gitconfig
    ~/.gitconfig.keybase: git/gitconfig.keybase
    ~/.gitconfig.zed: git/gitconfig.zed

- link:
    ~/.functions: functions

# =============================================================================
# DEFAULT: Run commands
# =============================================================================
- shell: # Install core dependencies
  # -------------------------------------
  # Homebrew
  # -------------------------------------
  - description: "==> Installing Homebrew"
    command: >
      [[  -z "$(command -v foo)"  ]]
      && /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
      || echo "==| Already installed = brew"

  # -------------------------------------
  # Oh My ZSH and its plugins
  # -------------------------------------
  - description: "==> Installing oh-my-zsh..."
    # Note that we unset the ZSH directory variable incase it is picked up by zshrc:19
    command: >
      [[ -z "$ZSH" ]]
      && ZSH= sh -c "$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
      || echo "==| Already exists = ~/.oh-my-zsh/"
    stdout: true
    stderr: true
  - description: "Install oh-my-zsh plugin ==> fzf-tab"
    command: >
      [[ ! -d "${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/plugins/fzf-tab" ]]
      && git clone https://github.com/Aloxaf/fzf-tab ${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/plugins/fzf-tab
      || echo "==| Already exists = ~/.oh-my-zsh/custom/plugins/fzf-tab"
  - description: "Install oh-my-zsh plugin ==> evalcache"
    command: >
      [[ ! -d "${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/plugins/evalcache" ]]
      && git clone https://github.com/mroth/evalcache ${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/plugins/evalcache
      || echo "==| Already exists = ~/.oh-my-zsh/custom/plugins/evalcache"
  - description: "Install oh-my-zsh plugin ==> zsh-autosuggestions"
    command: >
      [[ ! -d "${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/plugins/zsh-autosuggestions" ]]
      && git clone https://github.com/zsh-users/zsh-autosuggestions ${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/plugins/zsh-autosuggestions
      || echo "==| Already exists = ~/.oh-my-zsh/custom/plugins/zsh-autosuggestions"
  - description: "Install oh-my-zsh plugin ==> powerlevel10k"
    command: >
      [[ ! -d "${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/themes/powerlevel10k" ]]
      && git clone --depth=1 https://github.com/romkatv/powerlevel10k.git ${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/themes/powerlevel10k
      || echo "==| Already exists = ~/.oh-my-zsh/custom/plugins/powerlevel10k"

  # -------------------------------------
  # Node Version Manager
  # -------------------------------------
  - description: "==> Install node via nvm"
    command: >
      [[ -z "$(command -v nvm)" ]]
      && curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.0/install.sh | bash
      || echo "==| Already exists = nvm"

  # -------------------------------------
  # Install LunarVim
  # -------------------------------------
  - description: "==> Installing LunarVim"
    command: >
      [[ ! -d "$HOME/.local/bin/lvim" ]]
      && bash <(curl -s https://raw.githubusercontent.com/lunarvim/lunarvim/master/utils/installer/install.sh)
      || echo "==| Already exists = ~/.config/lvim"

  # -------------------------------------
  # Install Packer
  # -------------------------------------
  - description: "==> Installing Packer.lua"
    command: >
      [[ ! -d "$HOME/.local/share/nvim/site/pack/packer/opt" || ! -d "$HOME/.local/share/nvim/site/pack/packer/start"]]
      && git clone --depth 1 https://github.com/wbthomason/packer.nvim ~/.local/share/nvim/site/pack/packer/start/packer.nvim
      || echo "==| Already exists = Packer.lua"

  # -------------------------------------
  # Change shells last as to not interfere with the other srcipts
  # -------------------------------------
  - description: "==> Changing deafult shell to zsh..."
    command: >
      [[ $SHELL != *"zsh"* ]]
      && "chsh -s $(which zsh)"
      || echo "==| Already installed = zsh"

# =============================================================================
# DEFAULT: Link files
# Note: If linking to a directory, do not add a trailing slash
# =============================================================================

- link:
    ~/.tmux.conf: tmux/tmux.conf
    ~/.p10k.zsh: shell/p10k.zsh
    ~/.zprofile: shell/zprofile
    ~/.zlogin: shell/zlogin
    ~/.zshrc: shell/zshrc

- link: # Config
    ~/.config/alacritty/alacritty.yml:
      force: true
      create: true
      path: alacritty/alacritty.yml
    ~/.config/nvim:
      force: true
      create: true
      path: nvim
    ~/.config/lvim:
      force: true
      create: true
      path: lvim
    ~/.local/bin/lvim:
      force: true
      create: false
      path: lvim/bin/lvim

# -------------------------------------
# Customize macos defaults
# -------------------------------------
- shell:
  - description: "Setting macOS defaults..."
    command: >
      bash shell/macos.sh

  - description: "xterm-256color-italic.terminfo"
    command: >
      cd $HOME && tic xterm-256color-italic.terminfo && cd -
