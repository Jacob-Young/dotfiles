# TODO: https://github.com/alexcormier/dotbot-rust
# TODO: Go through p10k.zsh and find all prompt dependencies. Currently...
#       - virtualenv
#       - pyenv
#       - goenv therefore go
#       - node version manager (write something that installs node lTS as the default)
#       - rust (install rust)
# TODO: Package OperatorMono into the dotfiles directory
# TODO: Find a way to install fonts to the macOS FontBook.app programatically (https://superuser.com/a/120711)
# TODO: Use a font like NerdFont or FontAwesome

- defaults:
    link:
      relink: true
    brewfile: # https://github.com/sobolevn/dotbot-brewfile
      stdout: true
      stderr: true
      include: ['tap', 'brew', 'cask', 'mas']
    shell:
      quiet: false

# Looks for dead symlinks that point to the dotfiles repository, if any are
# found they will be cleanned automatically
# Set recursive: true to look for nested dead symbolic links
- clean: ['~']

- create:
    - ~/.config
    - ~/.config/alacritty
    - ~/.config/lvim
    - ~/.config/nvim
    - ~/.vim/undo-history
    - ~/Pictures/Screenshots # Alternative screenshot location

# TODO we need to handle installing on work computer. This path will be a symlink
# ~/.ssh -> ~/Personal/.ssh
# - create:
#     - ~/.ssh:
#         mode: 0700

- link: # Need Brewfile before running `brew bundle`
    ~/.Brewfile: Brewfile
    ~/xterm-256color-italic.terminfo: shell/xterm-256color-italic.terminfo

- link: # If linking directories, do not include a trailing slash.
    ~/.gitignore: git/gitignore
    ~/.gitconfig: git/gitconfig
    ~/.gitconfig.keybase: git/gitconfig.keybase
    ~/.gitconfig.zed: git/gitconfig.zed
    ~/.tmux.conf: tmux/tmux.conf
    ~/.p10k.zsh: shell/p10k.zsh
    ~/.zprofile: shell/zprofile
    ~/.zlogin: shell/zlogin
    ~/.zshrc: shell/zshrc

- link:
    ~/.config/alacritty/alacritty.yml: alacritty/alacritty.yml
    ~/.config/nvim: nvim
    ~/.config/lvim: lvim

- shell: # Install core dependencies
  -
    description: "--> Changing deafult shell to zsh..."
    command: >
      [[ $SHELL != *"zsh"* ]]
      && "chsh -s $(which zsh)"
      || echo "--| Already installed = zsh"
  -
    description: "--> Installing Homebrew"
    command: >
      [[  -z "$(command -v foo)"  ]]
      && /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
      || echo "--| Already installed = brew"
  -
    description: "--> Installing oh-my-zsh..."
    stdout: true
    stderr: true
    command: >
      [[ -z "$ZSH" ]]
      && sh -c "$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
      || echo "--| Already exists = ~/.oh-my-zsh/"
  -
    description: "Install oh-my-zsh plugin --> fzf-tab"
    command: >
      [[ ! -d "${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/fzf-tab" ]]
      && git clone https://github.com/Aloxaf/fzf-tab ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/fzf-tab
      || echo "--| Already exists = ~/.oh-my-zsh/custom/plugins/fzf-tab"
  -
    description: "Install oh-my-zsh plugin --> evalcache"
    command: >
      [[ ! -d "${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/evalcache" ]]
      && git clone https://github.com/mroth/evalcache ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/evalcache
      || echo "--| Already exists = ~/.oh-my-zsh/custom/plugins/evalcache"
  -
    description: "Install oh-my-zsh plugin --> zsh-autosuggestions"
    command: >
      [[ ! -d "${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions" ]]
      && git clone https://github.com/zsh-users/zsh-autosuggestions ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions
      || echo "--| Already exists = ~/.oh-my-zsh/custom/plugins/zsh-autosuggestions"
  -
    description: "Install oh-my-zsh plugin --> powerlevel10k"
    command: >
      [[ ! -d "${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/themes/powerlevel10k" ]]
      && git clone --depth=1 https://github.com/romkatv/powerlevel10k.git ${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/themes/powerlevel10k
      || echo "--| Already exists = ~/.oh-my-zsh/custom/plugins/powerlevel10k"
  -
    description: "install node via nvm"
    command: >
      [[ -z "$(command -v nvm)" ]]
      && curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.0/install.sh | bash
      || echo "--| Already exists = nvm"

- shell:
    - description: "Setting macOS defaults..."
      command: >
        bash shell/osx-defaults.sh

- shell:
  - command: >
      echo "Starting brew bundle"

- brewfile: # Calls brew bundle
    stdout: true
    stderr: true
    global: true
    no-upgrade: true
